# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import whisper
from googletrans import Translator
import moviepy.editor as mp
from PyQt5.QtWidgets import QFileDialog, QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(80, 70, 121, 61))
        self.pushButton.setObjectName("pushButton")
        self.listView = QtWidgets.QListView(self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(240, 80, 421, 41))
        self.listView.setObjectName("listView")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(250, 190, 421, 311))
        self.listWidget.setObjectName("listWidget")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(90, 190, 101, 61))
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 25))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Connect button clicks to functions
        self.pushButton.clicked.connect(self.upload_file)
        self.pushButton_2.clicked.connect(self.generate_transcription)

        # Initialize variables
        self.file_path = None
        self.model = QtGui.QStandardItemModel()
        self.listView.setModel(self.model)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Upload_File"))
        self.pushButton_2.setText(_translate("MainWindow", "Generate"))

    def upload_file(self):
        options = QFileDialog.Options()
        options |= QFileDialog.ReadOnly
        file_path, _ = QFileDialog.getOpenFileName(None, "選擇影片文件", "", "Video Files (*.mp4;*.avi;*.mov)", options=options)
        if file_path:
            self.file_path = file_path
            QMessageBox.information(None, "文件選擇", f"選擇的文件: {file_path}")
            self.model.clear()
            item = QtGui.QStandardItem(file_path)
            self.model.appendRow(item)

    def generate_transcription(self):
        if not self.file_path:
            QMessageBox.warning(None, "錯誤", "請先選擇影片文件")
            return

        # 提取音訊
        video = mp.VideoFileClip(self.file_path)
        audio_file_path = "audio.wav"
        video.audio.write_audiofile(audio_file_path)

        # 使用 Whisper 轉寫
        model = whisper.load_model("medium")
        result = model.transcribe(audio_file_path)
        transcription = result["text"]

        # 使用 Google Translate 翻譯
        sentences = transcription.split(', ')
        translator = Translator()
        translated_sentences = []

        for sentence in sentences:
            sentence = sentence.strip()
            if sentence:
                translated_sentence = translator.translate(sentence, src='en', dest='zh-tw').text
                translated_sentences.append((sentence, translated_sentence))

        # 顯示結果
        self.listWidget.clear()
        for original, translated in translated_sentences:
            self.listWidget.addItem(f"{original}.")
            self.listWidget.addItem(f"{translated}")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
